// Map containing various libs that are lazy loaded and utility functions.
Lib = {}

Lib.metaxploit = function()
    if (not Lib._libs.metaxploit) then Lib._libs.metaxploit = Lib.load("metaxploit")
    return Lib._libs.metaxploit
end function

Lib.crypto = function()
    if (not Lib._libs.crypto) then Lib._libs.crypto = Lib.load("crypto")
    return Lib._libs.crypto
end function

Lib._libs = {
    "metaxploit": null,
    "crypto": null,
}

// Returns the version of a local library
Lib.versionOf = function (name)
    if (not name.has(".so")) then name = name+".so"
    return Lib.metaxploit().load(Lib.getLibPath(name)).version
end function

Lib.getLibPath = function (name)
    libPath = "/lib/" + name
    if (get_shell.host_computer.File(libPath)) then return libPath
    libPath = current_path + "/" + name
    if (get_shell.host_computer.File(libPath)) then return libPath
    exit("Error: Can't find the <b>" + name + "</b> lib in the /lib path or the current folder")
end function

// Loads a lib either by reading it from the "/lib" or from the current path.
// No need to provide the lib extension (".so").
Lib.load = function (name)
    if (name.indexOf(".so") == null) then name = name + ".so"
    lib = include_lib(getLibPath(name))
    if not lib then exit("Error loading the lib "+name)
    return lib
end function

Lib.loadRemote = function (ip, port)
    net = libs.metaxploit.net_use(ip, port)
    if not net then exit("Error: can't connect to net session")
    if (net.is_root_active_user) then exit("Root user is active!")
    return net.dump_lib
end function
