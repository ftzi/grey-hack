Filters = {}
Filters.byTruthyProp = function (key)
    fn = function (item)
        return item.get(key) != null
    end function

    return @fn
end function

// Safely accesses a list item by the index.
// Returns null if the index is invalid.
list.get = function (index, default = null)
	if (self.hasIndex(index)) then return self[index] else return default
end function

// Returns true if the list includes the given item.
// @return {number}
list.has = function (item)
	return self.indexOf(item) != null
end function

// Only adds if the list doesn't have this item yet.
list.addUnique = function (item)
    if (not self.has(item)) then self.push(item)
end function

// Deletes the first occurrence of an item in the list. Mutates that list.
list.delete = function (item)
    index = self.indexOf(item)
    if (index != null) then self.remove(index)
end function

// Removes the items of a list when the given function returns not-true for each item.
list.filter = function (fn)
	newList = []
	for item in self
		if (fn(item)) then newList.push(item)
	end for
	return newList
end function

// Transforms each item of a list by using the given function.
list.map = function (fn)
	newList = []
	for item in self
		newList.push(fn(item))
	end for
	return newList
end function
