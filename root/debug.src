import_code("/root/c.src")
Compile.selfCompile()

import_code("/root/utils/std")

Debug = {}
Debug.currentLineCount = 0

// @param {string} entryFilePath
// @param {number} targetLineNumber
// @return {FindLine|null}
Debug.findLine = function (entryFilePath, targetLineNumber)
    entryFilePath = entryFilePath.absolutePath()

    recursive = function(filePath)
        fileContent = Fs.read(filePath)
        currentLineCount = 0
        for line in fileContent.split(LF)
            Debug.currentLineCount = Debug.currentLineCount + 1
            currentLineCount = currentLineCount + 1
            if (Debug.currentLineCount == targetLineNumber) then
                print("File: $".f(filePath))
                print("Line: $".f(line))
                return {
                    "file": filePath,
                    "line": 0
                    }
                end if
        end for
        // Compile.getImportsOfFile(filePath)

        // for import in imports
        //     recursive(import)
        // end for
    end function

    recursive(entryFilePath)

    print("Lines $".f(Debug.currentLineCount))

    if (Debug.currentLineCount < targetLine) then
        throw("Target line is greater than the total line count of the file and its imports ($).".f(Debug.currentLineCount))
    end if
end function

Debug.main = function ()
    program = Program.New
    // program.argument("srcFile")
    // program.argumentNumber("targetLine", "The line number to find the corresponding source file which raised the runtime error.")
    program.parse()

    Debug.findLine(program.args.srcFile, program.args.targetLine)
end function

Debug.main()
